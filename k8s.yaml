apiVersion: v1
kind: ConfigMap
metadata:
  name: project-conf
  namespace: default
data:
  EXAMPLE: "Login Request"
  NODE_ENV: "production"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: project-dep
  labels:
    app: project
spec:
  replicas: 2
  selector:
    matchLabels:
      app: project
  template:
    metadata:
      name: project-pod
      labels:
        app: project
        version: v1
    spec:
      volumes:
      - name: html
        gitRepo:
          repository: https://github.com/yffyhk/project_gcp_k8s.git
          revision: master
          directory: .
      containers:
      - image: yffyhk/project:latest
        name: nodejs
        workingDir: /usr/src/app
        livenessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: /
            port: 8080
        envFrom:
        - configMapRef:
            name: project-conf
        ports:
        - containerPort: 8080
          protocol: TCP
        volumeMounts:
        - name: html
          mountPath: /usr/src/app/html
          readOnly: true
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mssql-deployment
spec:
  replicas: 1
  selector:
     matchLabels:
       app: mssql
  template:
    metadata:
      labels:
        app: mssql
    spec:
      terminationGracePeriodSeconds: 30
      hostname: mssqlinst
      securityContext:
        fsGroup: 10001
      containers:
      - name: mssql
        image: mcr.microsoft.com/mssql/server:2019-latest
        ports:
        - containerPort: 1433
        env:
        - name: MSSQL_PID
          value: "Developer"
        - name: ACCEPT_EULA
          value: "Y"
        - name: SA_PASSWORD
          value: "P@ssw0rd"
        volumeMounts:
        - name: mssqldb
          mountPath: /var/opt/mssql
      volumes:
      - name: mssqldb
        persistentVolumeClaim:
          claimName: pvc-sql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-sql
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mssql-deployment
spec:
  selector:
    app: mssql
  ports:
    - protocol: TCP
      port: 1433
      targetPort: 1433
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: project-nodeport
  labels:
    app: project
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
  selector:
    app: project  
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: project-ingress
  labels:
    app: project
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: project-nodeport
            port: 
              number: 80
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: project-dep
  labels:
    app: project
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: project-dep
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 30